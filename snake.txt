一： 画出table，将没一个格子附一个DOM对象。用tds这个2维数组来存储这些对象 行和列的形式。
二： 然后用一个2维数组。存储蛇的身体。[[tou][shen][shen][][][][]  坐标的x,y形式
三： 上部有level选择，重新开始
移动：
1 移动 每次移动一格，速度则难度决定，刷新率实现。
2 移动的方向 move()
	1,有一个初始的运动方向（向右）speed=[1,0]。
	2，转向只能往前进方向的左右转向。
		向右[1,0]左转[0,-1] 
			 	右转[0,1]  
		向左[-1,0]左转[0,1]
				 右转[0,-1]
		向上[0,-1]左转[-1,0]
				 右转[1,0]
		向下[0,1]左转[1,0]
				 右转[-1,0]
		如果第一位是零 左转就是将数组倒置，右转就是数组倒置，取反
		如果第一位不是零  右转将数组倒置，左转将数组倒置后取反
3 食物 createFood()
	1，用一个数组来存储食物的坐标，坐标由则由Math.random()这个函数生成。
	2，食物一次只生成一个，当被吃掉以后，再重新生成。
	3，改变DOM对象tds中的className。
4 蛇 snake
	1，蛇存以坐标X,Y形式储在snake这个二维数组当中.
	2，蛇的移动
		1，首先蛇的身体，将数组从最后一位依次取钱一位的数值
		2，蛇头，即snake[0]中的数值按照第二步中的方法改变
	3，吃食物
		1，在移动和吃食物的过程中，首先需要判断，蛇头是否碰到墙，身体，和食物
		2，1，碰到墙，即snake[0]的超出边界-------------------gameOver
		   2，碰到自己，即snake[0]和snake[n]的数值相同-------gameOver
		   3，碰到食物，则将snake在前面增加一个位[food]，snake.unshift(food)，不用执行蛇的移动
		   		1，当被吃掉之后重新调用createFood(),
4 游戏的运行和渲染
	1，将键值绑定，并执行move()改变speed
	2，设置一个setInterval，不停的改变snake数组。时间间隔即为刷新率。
	3，将snake中的数组按照行与列的方式，更改DOM对象tds数组中的className属性

5 游戏结束 gameOver()
	游戏结束是，setInterval的timer清零。alert你失败了。





	 